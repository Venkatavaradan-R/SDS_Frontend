{"ast":null,"code":"var _jsxFileName = \"/home/venkat/Desktop/django-react-project/react 2/sds_fe/src/App.js\";\nimport React, { Component } from \"react\";\nimport { Row, FormGroup, FormControl, ControlLabel, Button, HelpBlock } from \"react-bootstrap\";\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace } from \"./validator\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      const target = event.target;\n      const value = target.value;\n      const name = target.name;\n      let {\n        formData\n      } = this.state;\n      formData[name] = value;\n      this.setState({\n        formData: formData\n      });\n    };\n\n    this.validateLoginForm = e => {\n      let errors = {};\n      const {\n        formData\n      } = this.state;\n\n      if (isEmpty(formData.email)) {\n        errors.email = \"Email can't be blank\";\n      } else if (!isEmail(formData.email)) {\n        errors.email = \"Please enter a valid email\";\n      }\n\n      if (isEmpty(formData.password)) {\n        errors.password = \"Password can't be blank\";\n      } else if (isContainWhiteSpace(formData.password)) {\n        errors.password = \"Password should not contain white spaces\";\n      } else if (!isLength(formData.password, {\n        gte: 6,\n        lte: 16,\n        trim: true\n      })) {\n        errors.password = \"Password's length must between 6 to 16\";\n      }\n\n      if (isEmpty(errors)) {\n        return true;\n      } else {\n        return errors;\n      }\n    };\n\n    this.login = e => {\n      e.preventDefault();\n      let errors = this.validateLoginForm();\n\n      if (errors === true) {\n        alert(\"You are successfully signed in...\");\n        window.location.reload();\n      } else {\n        this.setState({\n          errors: errors,\n          formSubmitted: true\n        });\n      }\n    };\n\n    this.state = {\n      formData: {},\n      // Contains login form data\n      errors: {},\n      // Contains login field errors\n      formSubmitted: false,\n      // Indicates submit status of login form\n      loading: false // Indicates in progress state of login form\n\n    };\n  }\n\n  render() {\n    const {\n      errors,\n      formSubmitted\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"email\",\n      validationState: formSubmitted ? errors.email ? \"error\" : \"success\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Enter your email\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }), errors.email && /*#__PURE__*/React.createElement(HelpBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 32\n      }\n    }, errors.email)), /*#__PURE__*/React.createElement(FormGroup, {\n      controlId: \"password\",\n      validationState: formSubmitted ? errors.password ? \"error\" : \"success\" : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ControlLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Enter your password\",\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }), errors.password && /*#__PURE__*/React.createElement(HelpBlock, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 35\n      }\n    }, errors.password)), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      bsStyle: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Sign-In\"))));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/venkat/Desktop/django-react-project/react 2/sds_fe/src/App.js"],"names":["React","Component","Row","FormGroup","FormControl","ControlLabel","Button","HelpBlock","isEmail","isEmpty","isLength","isContainWhiteSpace","Login","constructor","props","handleInputChange","event","target","value","name","formData","state","setState","validateLoginForm","e","errors","email","password","gte","lte","trim","login","preventDefault","alert","window","location","reload","formSubmitted","loading","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Row,\n  FormGroup,\n  FormControl,\n  ControlLabel,\n  Button,\n  HelpBlock,\n} from \"react-bootstrap\";\nimport { isEmail, isEmpty, isLength, isContainWhiteSpace } from \"./validator\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: {}, // Contains login form data\n      errors: {}, // Contains login field errors\n      formSubmitted: false, // Indicates submit status of login form\n      loading: false, // Indicates in progress state of login form\n    };\n  }\n\n  handleInputChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    let { formData } = this.state;\n    formData[name] = value;\n\n    this.setState({\n      formData: formData,\n    });\n  };\n\n  validateLoginForm = (e) => {\n    let errors = {};\n    const { formData } = this.state;\n\n    if (isEmpty(formData.email)) {\n      errors.email = \"Email can't be blank\";\n    } else if (!isEmail(formData.email)) {\n      errors.email = \"Please enter a valid email\";\n    }\n\n    if (isEmpty(formData.password)) {\n      errors.password = \"Password can't be blank\";\n    } else if (isContainWhiteSpace(formData.password)) {\n      errors.password = \"Password should not contain white spaces\";\n    } else if (!isLength(formData.password, { gte: 6, lte: 16, trim: true })) {\n      errors.password = \"Password's length must between 6 to 16\";\n    }\n\n    if (isEmpty(errors)) {\n      return true;\n    } else {\n      return errors;\n    }\n  };\n\n  login = (e) => {\n    e.preventDefault();\n\n    let errors = this.validateLoginForm();\n\n    if (errors === true) {\n      alert(\"You are successfully signed in...\");\n      window.location.reload();\n    } else {\n      this.setState({\n        errors: errors,\n        formSubmitted: true,\n      });\n    }\n  };\n\n  render() {\n    const { errors, formSubmitted } = this.state;\n\n    return (\n      <div className=\"Login\">\n        <Row>\n          <form onSubmit={this.login}>\n            <FormGroup\n              controlId=\"email\"\n              validationState={\n                formSubmitted ? (errors.email ? \"error\" : \"success\") : null\n              }\n            >\n              <ControlLabel>Email</ControlLabel>\n              <FormControl\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={this.handleInputChange}\n              />\n              {errors.email && <HelpBlock>{errors.email}</HelpBlock>}\n            </FormGroup>\n            <FormGroup\n              controlId=\"password\"\n              validationState={\n                formSubmitted ? (errors.password ? \"error\" : \"success\") : null\n              }\n            >\n              <ControlLabel>Password</ControlLabel>\n              <FormControl\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Enter your password\"\n                onChange={this.handleInputChange}\n              />\n              {errors.password && <HelpBlock>{errors.password}</HelpBlock>}\n            </FormGroup>\n            <Button type=\"submit\" bsStyle=\"primary\">\n              Sign-In\n            </Button>\n          </form>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}